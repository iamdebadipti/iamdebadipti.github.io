{"version":3,"sources":["webpack:///./src/styles/Post.module.scss","webpack:///./src/styles/Layout.module.scss","webpack:///./src/components/Navigation.js","webpack:///./src/components/Layout.js","webpack:///./src/styles/Navigation.module.scss","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Navigation","site","siteMetadata","author","title","siteUrl","className","styles","nav","href","nav_title","name","Layout","children","layout","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","previous","next","post_header","frontmatter","date","timeToRead","post_content","dangerouslySetInnerHTML","__html","html","post_nav","to","fields","slug","rel","pageQuery"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,aAAe,qC,uBCAjCD,EAAOC,QAAU,CAAC,OAAS,iC,0GC6BZC,EA1BI,WACjB,IADuB,EACb,OAc8BC,KAAKC,aAArCC,EAfe,EAefA,OAAQC,EAfO,EAePA,MAAOC,EAfA,EAeAA,QAEvB,OACE,yBAAKC,UAAWC,IAAOC,KACrB,uBAAGC,KAAMJ,EAASD,MAAOA,GACvB,wBAAIE,UAAWC,IAAOG,WAAYP,EAAOQ,S,qBCTlCC,IAXA,SAAC,GAAwB,EAAtBR,MAAuB,IAAhBS,EAAe,EAAfA,SACvB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKP,UAAWC,IAAOO,QACrB,8BAAOD,O,qBCRff,EAAOC,QAAU,CAAC,IAAM,gCAAgC,UAAY,wC,sNCDpE,uHA4CegB,UAvCU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKf,KAAKC,aAAaE,MACjCkB,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KAElB,OACE,kBAAC,IAAD,CAAQL,SAAUA,EAAUd,MAAOiB,GACjC,6BAASf,UAAWC,IAAOY,MACzB,4BAAQb,UAAWC,IAAOiB,aACxB,4BAAKL,EAAKM,YAAYrB,OACtB,4CACae,EAAKM,YAAYC,KAD9B,MACuCP,EAAKQ,WAD5C,cAIF,6BAASrB,UAAWC,IAAOqB,aAAcC,wBAAyB,CAAEC,OAAQX,EAAKY,SAGnF,yBAAKzB,UAAWC,IAAOyB,UACrB,4BACE,4BACGV,GACC,kBAAC,OAAD,CAAMW,GAAIX,EAASY,OAAOC,KAAMC,IAAI,QAApC,KACKd,EAASG,YAAYrB,QAI9B,4BACGmB,GACC,kBAAC,OAAD,CAAMU,GAAIV,EAAKW,OAAOC,KAAMC,IAAI,QAC7Bb,EAAKE,YAAYrB,MADpB,WAaP,IAAMiC,EAAS","file":"component---src-templates-blog-post-js-0df4e57031e50bdaa990.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_heading\":\"Post-module--post_heading--1A_bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout-module--layout--iVx0b\"};","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport styles from '../styles/Navigation.module.scss';\n\nconst Navigation = () => {\n  const data = useStaticQuery(graphql`\n    query AuthorQuery {\n      site {\n        siteMetadata {\n          title\n          siteUrl\n          author {\n            name\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, title, siteUrl } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.nav}>\n      <a href={siteUrl} title={title}>\n        <h1 className={styles.nav_title}>{author.name}</h1>\n      </a>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport styles from '../styles/Layout.module.scss';\n\nconst Layout = ({ title, children }) => {\n  return (\n    <>\n      <Navigation />\n      <div className={styles.layout}>\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation-module--nav--3ocjr\",\"nav_title\":\"Navigation-module--nav_title--SgfJT\"};","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport styles from '../styles/Post.module.scss';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article className={styles.post}>\n        <header className={styles.post_header}>\n          <h1>{post.frontmatter.title}</h1>\n          <small>\n            Posted on {post.frontmatter.date} - {post.timeToRead} min read\n          </small>\n        </header>\n        <section className={styles.post_content} dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n\n      <nav className={styles.post_nav}>\n        <ul>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}