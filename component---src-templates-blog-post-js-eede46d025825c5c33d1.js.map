{"version":3,"sources":["webpack:///./src/styles/Post.module.scss","webpack:///./src/styles/Layout.module.scss","webpack:///./src/components/Navigation.js","webpack:///./src/components/Layout.js","webpack:///./src/styles/Navigation.module.scss","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Navigation","site","siteMetadata","author","title","className","styles","nav","to","nav_title","name","Layout","children","layout","BlogPostTemplate","data","location","post","markdownRemark","siteTitle","post_header","frontmatter","dateTime","date","post_content","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,aAAe,mCAAmC,KAAO,6B,uBCA3HD,EAAOC,QAAU,CAAC,OAAS,iC,sHC4BZC,EAzBI,WACjB,IADuB,EACb,OAaqBC,KAAKC,aAA5BC,EAde,EAcfA,OAAQC,EAdO,EAcPA,MAEhB,OACE,yBAAKC,UAAWC,IAAOC,KACrB,kBAAC,OAAD,CAAMC,GAAG,IAAIJ,MAAOA,GAClB,wBAAIC,UAAWC,IAAOG,WAAYN,EAAOO,S,qBCRlCC,IAXA,SAAC,GAAwB,EAAtBP,MAAuB,IAAhBQ,EAAe,EAAfA,SACvB,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKP,UAAWC,IAAOO,QACrB,8BAAOD,O,qBCRfd,EAAOC,QAAU,CAAC,IAAM,gCAAgC,UAAY,wC,qLCDpE,2GA8Cee,UAzCU,SAAC,GAInB,IAHLC,EAGI,EAHJA,KAEAC,EACI,EADJA,SAEMC,EAAOF,EAAKG,eACZC,EAAYJ,EAAKd,KAAKC,aAAaE,MAGzC,OACE,kBAAC,IAAD,CAAQY,SAAUA,EAAUZ,MAAOe,GACjC,6BAASd,UAAWC,IAAOW,MACzB,4BAAQZ,UAAWC,IAAOc,aACxB,4BAAKH,EAAKI,YAAYjB,OACtB,0BAAMkB,SAAUL,EAAKI,YAAYE,MAAjC,aAAkDN,EAAKI,YAAYE,OAErE,6BAASlB,UAAWC,IAAOkB,aAAcC,wBAAyB,CAAEC,OAAQT,EAAKU,WA2BlF,IAAMC,EAAS","file":"component---src-templates-blog-post-js-eede46d025825c5c33d1.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_header\":\"Post-module--post_header--ia3mY\",\"post_content\":\"Post-module--post_content--1aR0J\",\"post\":\"Post-module--post--3cNy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout-module--layout--iVx0b\"};","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport styles from '../styles/Navigation.module.scss';\n\nconst Navigation = () => {\n  const data = useStaticQuery(graphql`\n    query AuthorQuery {\n      site {\n        siteMetadata {\n          title\n          author {\n            name\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, title } = data.site.siteMetadata;\n\n  return (\n    <div className={styles.nav}>\n      <Link to=\"/\" title={title}>\n        <h1 className={styles.nav_title}>{author.name}</h1>\n      </Link>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport styles from '../styles/Layout.module.scss';\n\nconst Layout = ({ title, children }) => {\n  return (\n    <>\n      <Navigation />\n      <div className={styles.layout}>\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation-module--nav--3ocjr\",\"nav_title\":\"Navigation-module--nav_title--SgfJT\"};","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport styles from '../styles/Post.module.scss';\n\nconst BlogPostTemplate = ({\n  data,\n  // pageContext,\n  location\n}) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  // const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article className={styles.post}>\n        <header className={styles.post_header}>\n          <h1>{post.frontmatter.title}</h1>\n          <time dateTime={post.frontmatter.date}>Posted on {post.frontmatter.date}</time>\n        </header>\n        <section className={styles.post_content} dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n\n      {/* <nav className={styles.post_nav}>\n        <ul>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav> */}\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}